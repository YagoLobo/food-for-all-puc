// <auto-generated />
using System;
using FoodforAll.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodforAll.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509203122_M01-CriandoTables")]
    partial class M01CriandoTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodforAll.Models.EstabelecimentoDoador", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TransporteProprio")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EstabelecimentoDoador");
                });

            modelBuilder.Entity("FoodforAll.Models.EstabelecimentoReceptor", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<bool?>("Aprovada")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("HorarioRecebimentoDoacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeReceptor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefeicoesDiarias")
                        .HasColumnType("int");

                    b.Property<string>("RegistroGoverno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsavelTecnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstabelecimentoReceptor");
                });

            modelBuilder.Entity("FoodforAll.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DoadorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstabelecimentoDoadorId")
                        .HasColumnType("int");

                    b.Property<int?>("EstabelecimentoReceptorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceptorId")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoadorId")
                        .IsUnique()
                        .HasFilter("[DoadorId] IS NOT NULL");

                    b.HasIndex("ReceptorId")
                        .IsUnique()
                        .HasFilter("[ReceptorId] IS NOT NULL");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("FoodforAll.Models.Usuario", b =>
                {
                    b.HasOne("FoodforAll.Models.EstabelecimentoDoador", "Doador")
                        .WithOne("Usuario")
                        .HasForeignKey("FoodforAll.Models.Usuario", "DoadorId");

                    b.HasOne("FoodforAll.Models.EstabelecimentoReceptor", "Receptor")
                        .WithOne("Usuario")
                        .HasForeignKey("FoodforAll.Models.Usuario", "ReceptorId");

                    b.Navigation("Doador");

                    b.Navigation("Receptor");
                });

            modelBuilder.Entity("FoodforAll.Models.EstabelecimentoDoador", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FoodforAll.Models.EstabelecimentoReceptor", b =>
                {
                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
